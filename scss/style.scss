@import "btnConfig";
@import "utilities";
@import "config";
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  background-color: $light-color;
  font-family: $font-stack;
  line-height: 1;
}

img {
  border-radius: 50%;
}

a {
  text-decoration: none;
}

.hero {
  @include set-bg($primary-color);
  nav{
    display:inline-flex;
    flex-direction: row;
    background-size:80%;
    padding-top:20px;
  }
  ul{
   display:inline-flex;
   flex-direction: row;
   justify-content: space-around;
   padding-top: 2%;
   padding-bottom:2%;
   padding-left:10px;
   list-style-type: none;
  }
  li a{
  width:110%;
  margin-right:110px;

  }
  a{
    display:inline-flex;
    flex-direction: row;
    color:text-color-picker($primary-color);
    padding-right:2%;
    text-align: center;
   
  }
  img{
    width:60%;
    height:50%;
  }
  .hero-content{
    display:inline-flex;
    flex-direction: row;
  }
  // This is where the bulk of the SCSS styling needs to be done

  // Take a look at the other files we've built already. How can they be useful here?

  // Also, take time to review the features of SCSS we've already covered:
  // 1. $variables
  // 2. nesting (dont forget about the ampersand (&) parent selector!)
  // 3. At-Rules
}

// This code is related to some of the aspects of SCSS we have yet to cover.
// While you don't have to mess with it, it would be advisable to attempt to understand its functionality.
$spaceamounts: (1,2,3,4,5);

@each $space in $spaceamounts {
  .m-#{$space} {
    margin: #{$space}rem;
  }
  .my-#{$space} {
    margin: #{$space}rem 0;
  }

  .p-#{$space} {
    padding: #{$space}rem;
  }
  .py-#{$space} {
    padding: #{$space}rem 0;
  }
}
